plugins {
    id 'java'
    id 'antlr'
    id 'idea'
}

version '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
repositories {
    mavenCentral()
}

dependencies {
    antlr 'org.antlr:antlr4:4.13.2'
    implementation 'org.antlr:antlr4-runtime:4.13.2'
}

def grammarDir = 'src/main/antlr'
def generatedSrcDir = "$buildDir/generated-src/antlr/main"

generateGrammarSource {
    maxHeapSize = "128m"

    source = fileTree(grammarDir) {
        include '**/*.g4'
    }

    arguments += ['-visitor', '-no-listener']
    outputDirectory = file(generatedSrcDir)
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src/main/antlr','src/main/gen', generatedSrcDir]
        }
    }
}
compileJava {
    dependsOn generateGrammarSource
    source sourceSets.main.java.srcDirs
}

tasks.register("testTranslator", JavaExec) {
    group = "verification"
    description = "Runs the C++ to Python translator test suite"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "testEngine.TestSuitsRunner"
}
tasks.register("example", JavaExec) {
    group = "verification"
    description = "Runs the C++ to Python translator for one file"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "example"
}

clean {
    delete generatedSrcDir
}

idea {
    module {
        sourceDirs += file(generatedSrcDir)
        generatedSourceDirs += file(generatedSrcDir)
    }
}
